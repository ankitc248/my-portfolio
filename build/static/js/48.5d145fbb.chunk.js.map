{"version":3,"file":"static/js/48.5d145fbb.chunk.js","mappings":"iLAGe,SAASA,IACtB,MAAMC,EAAcC,EAAAA,EAAAA,GAAAA,GACpB,OACEC,EAAAA,EAAAA,MAAA,WAASC,UAAU,eAAcC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,sBAAqBC,SAAC,sDAGnCC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,eAChBE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,SACjCJ,EAAYM,KAAI,CAACC,EAAMC,KACtB,MAAMC,EAAWF,EAAKE,SAASC,MAAM,KACrC,OACER,EAAAA,EAAAA,MAAA,OACEC,UAAU,YAEVQ,MAAO,CAAEC,eAAe,GAADC,OAAa,GAARL,EAAW,MAAMJ,SAAA,EAE7CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,QAAOC,SAAEG,EAAKO,SAC5BT,EAAAA,EAAAA,KAAA,KAAAD,SAAIG,EAAKQ,YACTb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAEK,EAAS,GAAGO,UACrCd,EAAAA,EAAAA,MAAA,QAAMC,UAAU,mBAAkBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,aAChBE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAElBE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,MAAKC,SAAEK,EAAS,GAAGO,gBAGvCd,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OACEF,UAAU,wBACVc,IAAKV,EAAKW,YACVC,IAAI,eAENd,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAEG,EAAKa,oBAExCf,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,UAEvCC,EAAAA,EAAAA,KAAA,KAAAD,UAAIiB,EAAAA,EAAAA,GAAcd,EAAKe,aAzBpBf,EAAKO,MA2BN,QAMlB,C,8CCjDA,MAMMO,EAAiBE,IACrB,MAAMC,EAAQD,EAAYb,MAAM,oBAAoBe,OAAOC,SAC3D,OACErB,EAAAA,EAAAA,KAAA,QAAAD,SACGoB,EAAMlB,KAAI,CAACqB,EAAMnB,KAChB,GAAImB,EAAKC,WAAW,MAAQD,EAAKE,SAAS,KAAM,CAC9C,MAAOC,EAAMC,GAAQJ,EAAKK,MAAM,GAAI,GAAGtB,MAAM,KAC7C,OACEL,EAAAA,EAAAA,KAAA,KAEE0B,KAAMA,EACNE,OAAO,SACP9B,UAAU,cACV+B,IAAI,aAAY9B,SAEf0B,GANItB,EASX,CAEA,OADiBmB,EAAKjB,MAAM,gBAAgBe,OAAOC,SACnCpB,KAAI,CAAC6B,EAASC,IACxBD,EAAQP,WAAW,MAAQO,EAAQN,SAAS,MAE5CxB,EAAAA,EAAAA,KAAA,QAAqBF,UAAU,cAAaC,SACzC+B,EAAQH,MAAM,GAAI,IADVI,GAKRD,GACP,KAEC,C","sources":["components/Work.jsx","helpers/Helpers.js"],"sourcesContent":["import PortfolioDetails from \"../PortfolioDetails.json\";\r\nimport { transformText } from \"../helpers/Helpers\";\r\n\r\nexport default function Work() {\r\n  const workDetails = PortfolioDetails.sections.workExperience.content;\r\n  return (\r\n    <section className=\"work-section\">\r\n      <p className=\"section-description\">\r\n        Pursuit of purpose through effort and dedication\r\n      </p>\r\n      <span className=\"separator\"></span>\r\n      <div className=\"work-grid item-grid\">\r\n        {workDetails.map((work, index) => {\r\n          const fullDate = work.fullDate.split(\"-\");\r\n          return (\r\n            <div\r\n              className=\"work-card\"\r\n              key={work.title}\r\n              style={{ animationDelay: `${index * 0.1}s` }}\r\n            >\r\n              <div className=\"education-card-body header\">\r\n                <h2 className=\"title\">{work.title}</h2>\r\n                <p>{work.subTitle}</p>\r\n                <div className=\"date-sticker\">\r\n                  <span className=\"start\">{fullDate[0].trim()}</span>\r\n                  <span className=\"middle-separator\">\r\n                    <span className=\"starter\"></span>\r\n                    <span className=\"ender\"></span>\r\n                  </span>\r\n                  <span className=\"end\">{fullDate[1].trim()}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"image-container\">\r\n                <img\r\n                  className=\"banner-image zoomable\"\r\n                  src={work.bannerImage}\r\n                  alt=\"education\"\r\n                />\r\n                <span className=\"image-caption\">{work.bannerCaption}</span>\r\n              </div>\r\n              <div className=\"education-card-body body\">\r\n                {/* <p>{work.subTitle}</p> */}\r\n                <p>{transformText(work.about)}</p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","// Utility functions\r\nconst sortObjectByKeyAndConvertToArray = (obj, key) => {\r\n  const array = Object.entries(obj);\r\n  array.sort((a, b) => a[1][key] - b[1][key]);\r\n  return array;\r\n};\r\n\r\nconst transformText = (inputString) => {\r\n  const parts = inputString.split(/(@[^@]+@[^@]+@)/g).filter(Boolean);\r\n  return (\r\n    <span>\r\n      {parts.map((part, index) => {\r\n        if (part.startsWith(\"@\") && part.endsWith(\"@\")) {\r\n          const [text, href] = part.slice(1, -1).split(\"@\");\r\n          return (\r\n            <a\r\n              key={index}\r\n              href={href}\r\n              target=\"_blank\"\r\n              className=\"inline-link\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              {text}\r\n            </a>\r\n          );\r\n        }\r\n        const subParts = part.split(/(\\*[^*]+\\*)/g).filter(Boolean);\r\n        return subParts.map((subPart, subIndex) => {\r\n          if (subPart.startsWith(\"*\") && subPart.endsWith(\"*\")) {\r\n            return (\r\n              <span key={subIndex} className=\"highlighted\">\r\n                {subPart.slice(1, -1)}\r\n              </span>\r\n            );\r\n          }\r\n          return subPart;\r\n        });\r\n      })}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport { sortObjectByKeyAndConvertToArray, transformText };\r\n"],"names":["Work","workDetails","PortfolioDetails","_jsxs","className","children","_jsx","map","work","index","fullDate","split","style","animationDelay","concat","title","subTitle","trim","src","bannerImage","alt","bannerCaption","transformText","about","inputString","parts","filter","Boolean","part","startsWith","endsWith","text","href","slice","target","rel","subPart","subIndex"],"sourceRoot":""}